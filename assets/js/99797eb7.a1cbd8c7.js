"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2372],{2822:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var o=a(7462),t=(a(7294),a(3905));a(1839);const r={slug:"percona-mongo-replicaset-minio",title:"How to configure Percona MongoDB Replicaset, Percona Backup Manager, Backup Agent using Docker and perform Replicaset backup, restore using S3 compatible object storage \u2013 MINIO",authors:{name:"Vishal Gandhi",url:"https://github.com/ivishalgandhi",image_url:"https://github.com/ivishalgandhi.png"},tags:["mongodb","containers","docker","s3","minio","pbm"]},i=void 0,s={permalink:"/percona-mongo-replicaset-minio",source:"@site/blog/2022-05-29-percona-mongo-replicaset-minio.md",title:"How to configure Percona MongoDB Replicaset, Percona Backup Manager, Backup Agent using Docker and perform Replicaset backup, restore using S3 compatible object storage \u2013 MINIO",description:"In this blog post, i will walk you through the steps required to containerize Percona Server for MongoDB, Percona Backup Manager, and Agent from source and configure cloud-native S3(Simple Storage Service) compatible distributed object storage MINIO to backup and restore Percona MongoDB snapshot backups.",date:"2022-05-29T00:00:00.000Z",formattedDate:"May 29, 2022",tags:[{label:"mongodb",permalink:"/tags/mongodb"},{label:"containers",permalink:"/tags/containers"},{label:"docker",permalink:"/tags/docker"},{label:"s3",permalink:"/tags/s-3"},{label:"minio",permalink:"/tags/minio"},{label:"pbm",permalink:"/tags/pbm"}],readingTime:4.205,hasTruncateMarker:!0,authors:[{name:"Vishal Gandhi",url:"https://github.com/ivishalgandhi",image_url:"https://github.com/ivishalgandhi.png",imageURL:"https://github.com/ivishalgandhi.png"}],frontMatter:{slug:"percona-mongo-replicaset-minio",title:"How to configure Percona MongoDB Replicaset, Percona Backup Manager, Backup Agent using Docker and perform Replicaset backup, restore using S3 compatible object storage \u2013 MINIO",authors:{name:"Vishal Gandhi",url:"https://github.com/ivishalgandhi",image_url:"https://github.com/ivishalgandhi.png",imageURL:"https://github.com/ivishalgandhi.png"},tags:["mongodb","containers","docker","s3","minio","pbm"]},prevItem:{title:"Guide to Software Bill of Materials(SBoM) and Docker SBOM CLI",permalink:"/docker-sbom"},nextItem:{title:"Local Home Lab DNS Setup with DNSMasq and NGINX",permalink:"/local-home-lab"}},l={authorsImageUrls:[void 0]},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Steps",id:"steps",level:2}],m={toc:p};function c(e){let{components:n,...r}=e;return(0,t.kt)("wrapper",(0,o.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"In this blog post, i will walk you through the steps required to containerize ",(0,t.kt)("a",{parentName:"p",href:"https://github.com/percona/percona-server-mongodb"},"Percona Server for MongoDB"),", ",(0,t.kt)("a",{parentName:"p",href:"https://github.com/percona/percona-backup-mongodb"},"Percona Backup Manager"),", and Agent from source and configure cloud-native S3(",(0,t.kt)("strong",{parentName:"p"},"S"),"imple ",(0,t.kt)("strong",{parentName:"p"},"S"),"torage ",(0,t.kt)("strong",{parentName:"p"},"S"),"ervice) compatible distributed object storage ",(0,t.kt)("a",{parentName:"p",href:"https://min.io/"},"MINIO")," to backup and restore Percona MongoDB snapshot backups."),(0,t.kt)("p",null,(0,t.kt)("img",{src:a(7329).Z,width:"834",height:"433"})),(0,t.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,t.kt)("p",null,"Ensure the below binaries are installed before starting the setup and configuration"),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://www.docker.com/get-started/"},"Docker")," or ",(0,t.kt)("a",{parentName:"p",href:"https://podman.io/"},"Podman")," to containerize Percona MongoDB replicaset and PBM Agent\n",(0,t.kt)("a",{parentName:"p",href:"https://docs.docker.com/compose/install/"},"Docker Compose"),"\n",(0,t.kt)("a",{parentName:"p",href:"https://go.dev/learn/"},"Golang")," compiler \u2013 Build Percona Backup Manager binaries\n",(0,t.kt)("a",{parentName:"p",href:"https://www.portainer.io/"},"Portainer")," (Optional) \u2013 Intuitive UI for container configuration and monitoring\nLet us perform the below steps to set up PSMDB Replicaset; PBM Agent; Minio, S3 compatible bucket, and PBM configuration to perform backups and restores from the bucket."),(0,t.kt)("h2",{id:"steps"},"Steps"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Create the Docker environment file with Docker Image, tag, port, and replicaset information. Save the file as .env in the working directory")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},"MONGODB_IMAGE=percona/percona-server-mongodb\nMONGODB_VERSION=5.0\nMONGO1_PORT=0.0.0.0:15000\nMONGO2_PORT=0.0.0.0:15001\nMONGO3_PORT=0.0.0.0:15002\nMONGODB_PORT=27017\nMONGODB_DOCKER_NETWORK=mongo_net\nRS_NAME=rs1\n\n")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Create keyFile , Dockerfile and download percona-backup-manager source code in the working directory")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},"$ git clone https://github.com/percona/percona-backup-mongodb.git\n\nARG MONGODB_VERSION\nARG MONGODB_IMAGE\nFROM ${MONGODB_IMAGE}:${MONGODB_VERSION}\nUSER root\nCOPY keyFile /opt/keyFile\nRUN chown mongodb /opt/keyFile && chmod 400 /opt/keyFile && mkdir -p /home/mongodb/ && chown mongodb /home/mongodb\nUSER mongodb\n")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Create Docker Compose file")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-YAML"},'version: "3.8"\nservices:\n  rs101:\n    build:\n      dockerfile: Dockerfile\n      context: /home/vishal/dev/psmdb\n      args:\n        - MONGODB_VERSION=${MONGODB_VERSION}\n        - MONGODB_IMAGE=${MONGODB_IMAGE}\n    hostname: rs101\n    labels:\n      - "com.percona.pbm.app=mongod"\n    environment:\n      - REPLSET_NAME=rs1\n      - MONGO_USER=dba\n      - BACKUP_USER=bcp\n      - MONGO_PASS=test1234\n    ports:\n      - "${MONGO1_PORT}:${MONGODB_PORT}"\n    # command: mongod --replSet rs1 --port ${MONGO1_PORT}:27017 --storageEngine wiredTiger --keyFile /opt/keyFile --wiredTigerCacheSizeGB 1\n    command: ["--replSet", "${RS_NAME}", "--bind_ip_all", "--storageEngine", "wiredTiger" , "--keyFile", "/opt/keyFile"]\n    volumes:\n      - data-rs101:/data/db\n      - ./scripts/start.sh:/opt/start.sh\n  rs102:\n    build:\n      dockerfile: Dockerfile\n      context: /home/vishal/dev/psmdb\n      args:\n        - MONGODB_VERSION=${MONGODB_VERSION}\n        - MONGODB_IMAGE=${MONGODB_IMAGE}\n    hostname: rs102\n    labels:\n      - "com.percona.pbm.app=mongod"\n    # command: mongod --replSet rs1 --port 27017 --storageEngine wiredTiger --keyFile /opt/keyFile --wiredTigerCacheSizeGB 1\n    ports:\n      - "${MONGO2_PORT}:${MONGODB_PORT}"\n    command: ["--replSet", "${RS_NAME}", "--bind_ip_all", "--storageEngine", "wiredTiger" , "--keyFile", "/opt/keyFile"]\n    volumes:\n      - data-rs102:/data/db\n  rs103:\n    build:\n      dockerfile: Dockerfile\n      context: /home/vishal/dev/psmdb\n      args:\n        - MONGODB_VERSION=${MONGODB_VERSION}\n        - MONGODB_IMAGE=${MONGODB_IMAGE}\n    hostname: rs103\n    labels:\n      - "com.percona.pbm.app=mongod"\n    # command: mongod --replSet rs1 --port 27017 --storageEngine wiredTiger --keyFile /opt/keyFile --wiredTigerCacheSizeGB 1\n    ports:\n      - "${MONGO3_PORT}:${MONGODB_PORT}"\n    command: ["--replSet", "${RS_NAME}", "--bind_ip_all", "--storageEngine", "wiredTiger" , "--keyFile", "/opt/keyFile"]\n    volumes:\n      - data-rs103:/data/db\n  agent-rs101:\n    container_name: "pbmagent_rs101"\n    user: "1001"\n    labels:\n      - "com.percona.pbm.app=agent"\n      - "com.percona.pbm.agent.rs=rs1"\n    environment:\n      - "PBM_MONGODB_URI=mongodb://${BACKUP_USER:-bcp}:${MONGO_PASS:-test1234}@rs101:27017"\n    build:\n      labels:\n        - "com.percona.pbm.app=agent"\n      dockerfile: /home/vishal/open-source/percona-backup-mongodb/docker/Dockerfile\n      context: /home/vishal/open-source/percona-backup-mongodb/\n      args:\n        - MONGODB_VERSION=${MONGODB_VERSION:-5.0}\n    volumes:\n      - ./conf:/etc/pbm\n      - ./backups:/opt/backups\n      - data-rs101:/data/db\n    command: pbm-agent\n    cap_add:\n      - NET_ADMIN\n  agent-rs102:\n    container_name: "pbmagent_rs102"\n    user: "1001"\n    labels:\n      - "com.percona.pbm.app=agent"\n      - "com.percona.pbm.agent.rs=rs1"\n    environment:\n      - "PBM_MONGODB_URI=mongodb://${BACKUP_USER:-bcp}:${MONGO_PASS:-test1234}@rs102:27017"\n    build:\n      labels:\n        - "com.percona.pbm.app=agent"\n      dockerfile: /home/vishal/open-source/percona-backup-mongodb/docker/Dockerfile\n      context: /home/vishal/open-source/percona-backup-mongodb/\n      args:\n        - MONGODB_VERSION=${MONGODB_VERSION:-5.0}\n    volumes:\n      - ./conf:/etc/pbm\n      - ./backups:/opt/backups\n      - data-rs102:/data/db\n    command: pbm-agent\n    cap_add:\n      - NET_ADMIN\n  agent-rs103:\n    container_name: "pbmagent_rs103"\n    user: "1001"\n    labels:\n      - "com.percona.pbm.app=agent"\n      - "com.percona.pbm.agent.rs=rs1"\n    environment:\n      - "PBM_MONGODB_URI=mongodb://${BACKUP_USER:-bcp}:${MONGO_PASS:-test1234}@rs103:27017"\n    build:\n      labels:\n        - "com.percona.pbm.app=agent"\n      dockerfile: /home/vishal/open-source/percona-backup-mongodb/docker/Dockerfile\n      context: /home/vishal/open-source/percona-backup-mongodb/\n      args:\n        - MONGODB_VERSION=${MONGODB_VERSION:-5.0}\n    volumes:\n      - ./conf:/etc/pbm\n      - ./backups:/opt/backups\n      - data-rs103:/data/db\n    command: pbm-agent\n    cap_add:\n      - NET_ADMIN\nvolumes:\n  backups: null\n  data-rs101: null\n  data-rs102: null\n  data-rs103: null\n\n')),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Run Docker compose\nThe below command will build and start the docker container for Percona Server MongoDB Primary Secondary Secondary replicaset and Percona Backup Manager Agent for each replicaset")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"$ psmdb docker compose -f docker-compose-rs.yaml up -d\n[+] Running 8/8\n\u283f Container psmdb-rs102-1 Running 0.0s\n\u283f Container psmdb-rs103-1 Running 0.0s\n\u283f Container pbmagent_rs103 Running 0.0s\n\u283f Container pbmagent_rs102 Running 0.0s\n\u283f Container psmdb-rs101-1 Running 0.0s\n\u283f Container pbmagent_rs101 Running 0.0s\n\n")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Connect to MongoDB replicaset and ensure replication and containers are working")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},'$ mongo "mongodb://dba:test1234@192.168.50.113:15000,192.168.50.113:15001,192.168.50.113:15002/admin?replicaSet=rs1"\n')),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Setup Minio and Minio CLI")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ cd ~/downloads && wget https://dl.min.io/server/minio/release/linux-amd64/minio\n \n$ wget https://dl.min.io/client/mc/release/linux-amd64/mc\nchmod +x mc\n./mc --help\n \n$  downloads ./minio server /home/vishal/data --address=0.0.0.0:7000\n \n\nAPI: http://0.0.0.0:7000 \nRootUser: minioadmin \nRootPass: minioadmin \nFinished loading IAM sub-system (took 0.0s of 0.0s to load data).\n \nConsole: http://192.168.50.113:43859 http://192.168.160.1:43859 http://172.18.0.1:43859 http://172.19.0.1:43859 http://172.24.0.1:43859 http://172.26.0.1:43859 http://172.17.0.1:43859 http://127.0.0.1:43859                   \nRootUser: minioadmin \nRootPass: minioadmin \n \nCommand-line: https://docs.min.io/docs/minio-client-quickstart-guide\n   $ mc alias set myminio http://0.0.0.0:7000 minioadmin minioadmin\n \nDocumentation: https://docs.min.io\n\n\n")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Setup Minio server alias and List buckets")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},"$  mc alias set minio-deb http://192.168.50.113:7000 minioadmin minioadmin\n$  mc ls minio-deb\n[2022-05-29 14:59:32 IST] 0B nocodb/\n[2022-05-29 00:19:41 IST] 0B typesense/\n\n")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Create a new bucket and name it ",(0,t.kt)("inlineCode",{parentName:"li"},"pbm"))),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},"$ mc alias set minio-deb http://192.168.50.113:7000 minioadmin minioadmin\n$ mc ls minio-deb\n  [2022-05-29 14:59:32 IST] 0B nocodb/\n  [2022-05-29 00:19:41 IST] 0B typesense/\n")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Setup PBM or compile PBM from the source repository")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},"$ sudo apt-get install -y libkrb5-dev\n$ cd percona-backup-mongodb\n$ make build\n$ make install\n")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"create pbm_config.YAML to be used for configuring PBM for using MINIO")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-YAML"},'\nstorage:\n    type: s3\n    s3:\n      endpointUrl: http://192.168.50.113:7000\n      bucket: pbm\n      credentials:\n        access-key-id: "minioadmin"\n        secret-access-key: "minioadmin"\n\n\n')),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Configure PBM")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},'$ ./pbm config --file /home/vishal/dev/psmdb/pbm_config.yaml --mongodb-uri="mongodb://bcp:test1234@192.168.50.113:15000/?replSetName=rs1"\n\n')),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Validate agent container logs and run the pbm list command. If MINIO is configured successfully, agent container logs shouldn\u2019t log any errors.")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-shell"},'2022-05-29T01:31:14.000+0000 D [resync] got backups list: 02022-05-29T01:31:14.000+0000 D [resync] got physical restores list: 0\n\n$ bin git:(main) ./pbm list --mongodb-uri="mongodb://bcp:test1234@192.168.50.113:15000/?replSetName=rs1"\nBackup snapshots:\n2022-05-29T01:29:12Z [complete: 2022-05-29T01:29:16Z]\n2022-05-29T01:38:38Z [complete: 2022-05-29T01:38:42Z]\n2022-05-29T04:04:44Z [complete: 2022-05-29T04:04:48Z]\n')),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"To run PBM backup and restore execute the below commands")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'$ ./pbm backup --mongodb-uri="mongodb://bcp:test1234@192.168.50.113:15000/?replSetName=rs1" \n$ ./pbm restore 2022-05-29T04:04:44Z --mongodb-uri="mongodb:/\n')))}c.isMDXComponent=!0},7329:(e,n,a)=>{a.d(n,{Z:()=>o});const o=a.p+"assets/images/minio-be0df17e540f83ca7fda66435ae2b18c.webp"}}]);