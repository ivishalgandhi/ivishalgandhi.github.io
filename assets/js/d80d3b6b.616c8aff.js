"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4165],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var o=n.createContext({}),u=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),g=u(r),d=i,h=g["".concat(o,".").concat(d)]||g[d]||p[d]||a;return r?n.createElement(h,s(s({ref:t},c),{},{components:r})):n.createElement(h,s({ref:t},c))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,s=new Array(a);s[0]=g;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,s[1]=l;for(var u=2;u<a;u++)s[u]=r[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},11933:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=r(87462),i=(r(67294),r(3905));const a={slug:"rest-api-design-rules",title:"Understanding REST API Design Rules",authors:{name:"Vishal Gandhi",url:"https://github.com/ivishalgandhi",image_url:"https://github.com/ivishalgandhi.png"},tags:["rest","restapi","rest-api-design-rules"]},s=void 0,l={permalink:"/rest-api-design-rules",source:"@site/blog/2022-10-02-rest-api-design-rules.md",title:"Understanding REST API Design Rules",description:"This blog article on REST API Design Rules is still under draft and review. The final version will have changes and will be published soon.",date:"2022-10-02T00:00:00.000Z",formattedDate:"October 2, 2022",tags:[{label:"rest",permalink:"/tags/rest"},{label:"restapi",permalink:"/tags/restapi"},{label:"rest-api-design-rules",permalink:"/tags/rest-api-design-rules"}],readingTime:6.515,hasTruncateMarker:!0,authors:[{name:"Vishal Gandhi",url:"https://github.com/ivishalgandhi",image_url:"https://github.com/ivishalgandhi.png",imageURL:"https://github.com/ivishalgandhi.png"}],frontMatter:{slug:"rest-api-design-rules",title:"Understanding REST API Design Rules",authors:{name:"Vishal Gandhi",url:"https://github.com/ivishalgandhi",image_url:"https://github.com/ivishalgandhi.png",imageURL:"https://github.com/ivishalgandhi.png"},tags:["rest","restapi","rest-api-design-rules"]},nextItem:{title:"Understanding MongoDB Replicasets and Write Concern - Part 1",permalink:"/mongodb-replicaset-write-concern-read-pref"}},o={authorsImageUrls:[void 0]},u=[],c={toc:u};function p(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"This blog article on REST API Design Rules is still under draft and review. The final version will have changes and will be published soon.")),(0,i.kt)("p",null,"REST (Representational State Transfer) is an architectural style for building distributed systems. It is a set of rules that developers follow while designing their APIs. "),(0,i.kt)("p",null,"A Web API conforming to the REST architectural style, called RESTful Web API. REST APIs are stateless, client-server, cacheable, layered system, and are designed around resources. The set of resources is known as the REST API's ",(0,i.kt)("em",{parentName:"p"},"resource model")),(0,i.kt)("p",null,"When Designing a REST API, we need to seek answers to the following questions:"))}p.isMDXComponent=!0}}]);